var searchIndex = {};
searchIndex['resolv_conf'] = {"items":[[3,"Config","resolv_conf","Encompasses the nameserver configuration",null,null],[12,"nameservers","","List of nameservers",0,null],[12,"search","","List of suffixes to append to name when it doesn't contain ndots",0,null],[12,"sortlist","","List of preferred addresses",0,null],[12,"debug","","Enable DNS resolve debugging",0,null],[12,"ndots","","Number of dots in name to try absolute resolving first (default 1)",0,null],[12,"timeout","","Dns query timeout (default 5 [sec])",0,null],[12,"attempts","","Number of attempts to resolve name if server is inaccesible (default 2)",0,null],[12,"rotate","","Round-robin selection of servers (default false)",0,null],[12,"no_check_names","","Don't check names for validity (default false)",0,null],[12,"inet6","","Try AAAA query before A",0,null],[12,"ip6_bytestring","","Use reverse lookup of ipv6 using bit-label format described instead\nof nibble format",0,null],[12,"ip6_dotint","","Do ipv6 reverse lookups in ip6.int zone instead of ip6.arpa\n(default false)",0,null],[12,"edns0","","Enable dns extensions described in RFC 2671",0,null],[12,"single_request","","Don't make ipv4 and ipv6 requests simultaneously",0,null],[12,"single_request_reopen","","Use same socket for the A and AAAA requests",0,null],[12,"no_tld_query","","Don't resolve unqualified name as top level domain",0,null],[12,"use_vc","","Force using TCP for DNS resolution",0,null],[4,"ParseError","","Error while parsing resolv.conf file",null,null],[13,"InvalidUtf8","","",1,null],[13,"InvalidValue","","",1,null],[13,"InvalidOptionValue","","",1,null],[13,"InvalidIp","","",1,null],[13,"ExtraData","","",1,null],[4,"Network","","A network, that is an IP address and the mask",null,null],[13,"V4","","",2,null],[13,"V6","","",2,null],[11,"fmt","","",1,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"cause","","",1,{"inputs":[{"name":"parseerror"}],"output":{"name":"option"}}],[11,"fmt","","",2,{"inputs":[{"name":"network"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"network"}],"output":{"name":"network"}}],[11,"fmt","","",0,{"inputs":[{"name":"config"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"new","","",0,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"parse","","",0,null]],"paths":[[3,"Config"],[4,"ParseError"],[4,"Network"]]};
searchIndex['quick_error'] = {"items":[[14,"quick_error!","quick_error","Main macro that does all the work",null,null]],"paths":[]};
initSearch(searchIndex);
